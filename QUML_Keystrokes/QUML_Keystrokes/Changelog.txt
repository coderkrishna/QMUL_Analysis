31st December 2014
Version: 0.1
Purpose: To review my knowledge that I learned about using various verifiers
to be able to analyze data sets, and also to enhance my knowledge about the 
concepts of machine learning. 

5th May 2015
* Revisiting this project after a while to brush up on various things
* Also to further develop this code to be more readable, usable, etc... 
* Added a new class - ManhattanDistance.cs to implement the basic steps that are involved with the Manhattan verifier
* Having various things be done like printing out the data, and all. 
* Editing the Manhattan Verifier class such that it will print the original data, then calculate the average vector.  

6th May 2015
* Making more code regions possible - that way this code is not only readable, but understandable. 
* Having more annotations, methods in the ManhattanDistance class file. 
* Making further method calls. 
* Adding more user functionality so that the end user can be able to see which verifier to use and therefore see the results. 
* Now creating the data structures for the additional data files which I just imported.  

11th May 2015
* Having a DataFiltering class with one method to really make sure that we put in a text file, 
get out a 2D double array. 
* Adding in the various comments and made sure that everything still makes sense. 

12 May 2015
* Adding in more user data, and right now, having all of the user data entered into the solution is most important thing to get done
* Also to format the txt files and save them as csv files also is an important aspect to making this work

13th May 2015
* Going to add more users to this solution
* Review the in-code documentation that is currently written and edit that.
* After that will be writing the method to calculate the genuine scores which is part of the process for the Manhattan Verifier.

23rd May 2015
* Reviewing the written code and catching up to speed.
* Finishing up the genuine score calculation method.
* Also keeping up with the changelog.

27th May 2015
* Adding more user data - users 10 through 12, the CSV files.  In code will be done later. 
* Making more progress with regards to the ManhattanDistance class. 
* Also making sure to understand the EuclideanDistance verifier via examples and also then will be 
planning out the pseudocode for it as well. 

29th May 2015
* Making sure that I have an Excel file with which I can double check some key points in the Manhattan Distance verifier
* Adding the calculations of the template vectors of users 10 through 20. 
* Will begin the calculation of the genuine scores for users 1 through 20.
* Adding more user data to this solution. Will be adding the data for users 13 through 20. 
(approximately eight more users into this solution)
* Also ensuring that everything is okay even in execution. 

31st May 2015
* Reviewing previously written code to be able to calculate the genuine scores
* Now that is working correctly and I am beginning to have the results double checked

7th June 2015
* Adding the EuclideanDistance.cs class file. 
* Will be then adding more user data into this solution file, and then handling that in code. (TODO item) 
* To-do: For the Manhattan Distance class, will have to write the method to be able to 
calculate the impostor scores

9th June 2015
* Making some more changes with the in-code documentation.
* Also will be adding the method to calculate the impostor scores (zero-effort impostor scores)
	* For the ManhattanDistance.cs class file - This is a to-do item
* If possible, will add maybe three more users (raw data) - That is done!

10th June 2015
* Updating in-code documentation and also renaming variables and writing code in accordance with standards for C# development. 
* Making changes to the ManhattanDistance.cs class and EuclideanDistance.cs class files to be able to have the impostor scores (ManhattanDistance.cs)
to be calculated, and the genuine scores to be calculated in EuclideanDistance.cs class. 
* Plan to add more user data here as well - Maximum 3 more users or so.
* Next, with the ManhattanDistance.cs class file, the following items are to-do items; CalculateImpostorScores(params go here), CalculateFalseAccptRate(params go here), 
and CalculateFalseRejectRate(params go here).
* Begin to double check the manhattan distance results (even the intermediate steps)
	* From the mean calculations, to the genuine scores that are generated.
	* Next, double check on the impostor scores that are generated.

11th June 2015
* Today, I am going to be adding more user data - hopefully, add them to repository and in-code
* Have to be on top of this coding, and also make sure to write abiding by industry practices.
* Make sure to have the calls made for the impostor scores - with the manhattan distance class.

12th June 2015
* Updating the in-code documentation, and annotating the code where it is appropriate. 
* Making sure to apply the normalized (this is very key) verifiers (Manhattan Distance, Euclidean Distance, etc...)
* This is my own project that I am doing on my own, on the side just for the sake of practicing
* Adding more users to the repository as well, and adding these users in-code

13th June 2015
* Adding about five more users to the solution (and the code repository in the process)
* Will then add the same users in-code as parameters for data extraction
* Making additional calls for generating the template vectors etc...
* Working with about 33 user data - generating their template vectors and genuine scores
* Now also will be working on populating the impostor scores of approximately 6 users, and having the other users as the zero-effort impostors

14th June 2015
* Focusing mostly on the data, and having all of the users in the repository and in code
* Have already added 40 users, need to add 60 more - I'll be spending most of my time on this task today
* Then will have parse the CSV files and then will also have to declare and initialize their template vectors and genuine scores
* After that will be the impostor scores that are generated and then will be the various rates
* Also tidying up the code right now and making sure that I can use up the most whitespace possible for declarations and then leave some whitespace
for comments where it is necessary. 

17th June 2015
* Adding more user data - raw data, users 61 through 64
* Will be initializing their mean vectors (template vectors) and the genuine scores as well.  
* Then will be adding more users and hopefully get to user 70

18th June 2015
* Right now declaring more user variables (user data, mean vectors [template vectors], and genuine scores)
* Will be adding the CSV files for users 65 through 70 in the solution. 
* Later on will be adding these users in-code. 

19th June 2015
* Having more variables declared, but not initialized
* Right now be focusing on the variables for the raw data, template vectors and genuine scores
* Users working on today - 71 through 75

20th June 2015
* Adding in more user data to this repository, users 76 through 83
* Will make their references in code later on today
* Declare their raw data arrays, their templates, and genuine scores. 
* Next added users 84 through 90 - in the repository, and started the declarations in code. 

21st June 2015
* Finished organization of all data
* Will be adding the data files to the solution and also then 
adding the files in-code

22nd June 2015
* Finishing up populating the genuine scores for the 100 users as detailed in the Euclidean Verifier
* Keep in mind that the regular verifiers are all normalized by the number of samples.  
* Now will have to write the impostor score references for the manhattan verifier (normalized) and also 
write the impostor scores method for the euclidean verifer.  
* Each impostor score methods will have about 10,000 or so references.  

23rd June 2015
* Making changes to the method signature under the EuclideanVerifier class
* Right now also having the method references be the same way, regarding the variable references
and how the variables are being initialized by the respective methods.
* Cleaned up the in-code documentation of the the ManhattanDistance.cs class file

24th June 2015
* Right now declared more impostor score variables.
* Also populating the impostor scores under both the Euclidean Distance and Manhattan Distance verifiers. 

25th June 2015
* Populating more impostor score variables, and also cleaning up in-code documentation
* Also having the changelog.txt file updated with the list of tasks that needed to be done
* Making sure that I am able to finish off declaring all the impostor scores for user 1 under
both the Manhattan and Euclidean Verifiers.  

26th June 2015
* Finished populating the impostor score variables for user 3 under the Euclidean Verifier
* Will be looking to initialize and declare more impostor score variables for the other users under
both the Euclidean and Manhattan Verifiers.
* I have yet to code the Scaled Verifiers (Euclidean and Manhattan) - Those are a little more
involved since the standard deviation is coming into the picture now
* Finished populating the impostor scores for user 4 under the Euclidean verifier
* Finished populating the impostor scores for user 3 under both the Manhattan and Euclidean verifiers

27th June 2015
* Finished populating the scores for user 4 (under both Euclidean and Manhattan verifiers)
* Populating the scores for user 5 under the Manhattan verifier first, and declaring more impostor score
variables for user 5. 

28th June 2015
* Populating more impostor scores for user 5
* Declaring all the remaining impostor score vars for user 5
* Begin to initialize the impostor score vars for user 5 (all of them under both Euclidean and Manhattan verifiers)
* Right now populating the impostor score variables for user 5 under the Euclidean verifier

29th June 2015
* Will finish populating the impostor scores for user 5 under the Euclidean Verifier
* Then begin to declare the remaining impostor scores for user 6, and then populate them under both the Euclidean and Manhattan
verifiers

30th June 2015
* Updating in-code documentation where necessary
* Added a new class for Scaled Manhattan verifier
* Declaring and populating the impostor scores for user 7 - under both the Euclidean and Manhattan verifiers
* Next, declaring the impostor scores for user 8 - and then will populate them under the Euclidean and Manhattan verifiers
* Finished populating the impostor scores for user 8 under the Manhattan Distance verifier
* Now populating the impostor scores for user 8 under the Euclidean Distance verifier

1st July 2015
* Right now will continue populating the impostor scores for user 9
* Updating all in-code documentation where it is necessary
* Finished populating the impostor scores for user 9 under the Euclidean verifier
* Now populating the impostor scores for user 9 under the Mahattan verifier
* Finished declaring the remaining impostor scores for user 10, and populated the impostor scores for user 10 under the Manhattan verifier
* Now populating the impostor scores for user 10 under the Euclidean verifier

2nd July 2015
* Making progress on this code project
* Going to declare the impostor score variables for user 11 - Now these have been populated under the Euclidean and Manhattan verifiers
* Beginning to declare the impostor score variables for user 12
* Right now progressing with declaring the impostor score variables for user
12

3rd July 2015
* Declaring the impostor score variables for user 13
* Will later be populating the impostor scores for user 13 under both the Manhattan and Euclidean verifiers.
* Will attempt to write the CalculateGenuineScore methods for the Scaled Manhattan Distance
	* Have to write the CalculateStandDev methods as well - That is completed: 03/07/2015, 17:34 

5th July 2015
* Right now populating the impostor score variables for user 13
* Finished declaring the impostor score variables for user 13 and will be 
populating them under both euclidean and manhattan verifiers

6th July 2015
* Progress on populating the impostor scores for user 13
* Will be tackling the Euclidean verifier - this will be worked on for populating the impostor scores for user 13
* Finished populating under the Euclidean verifier, now will be populating under the Manhattan verifer, the same impostor
scores for user 13
* Now declared the impostor score variables for user 14
* Finished populating these variables halfway under the Euclidean verifier
* Updating the in-code documentation with the appropriate regions etc...
* Declaring the impostor score variables for user 15

7th July 2015
* Finished populating the impostor score variables for user 14 under the Euclidean verifier
* Declaring the impostor score variables for user 15
* Will be populating the impostor score variables for user 14 under the Manhattan verifier - This is already finished
* Plan to make some progress with the Scaled Manhattan verifier, plan to write the method to calculate the genuine scores
* Finished populating the impostor score variables for user 15

8th July 2015
* Today plan to write the method to calculate the genuine scores under the Scaled Manhattan verifier
* Will also be planning to populate the genuine scores as well - making progress on that
* Populating the genuine scores under the Scaled Manhattan verifier
* Declaring the impostor score variables for user 16
* Now finished declaring the impostor scores for user 16, finished populating the genuine scores under the Scaled Manhattan verifier
* For today, will be populating the impostor scores for user 16

9th July 2015
* Finishing populating the impostor score variables for user 16 under the Manhattan verifier
* Will be declaring the impostor score variables for user 17
* Now will have to make more progress with the Scaled Manhattan verifier and then populate all of the impostor score variables again

10th July 2015
* Declaring more impostor score variables for user 17
* Updating the in-code documentation appropriately

11th July 2015
* Declaring the impostor score variables for user 18
* Will plan to change the architecture of the project soon, and will
plan to incorporate some class library projects as well!

12th July 2015
* Declaring more impostor scores variables for user 18
* Will be populating them under both the Euclidean and Manhattan verifiers

13th July 2015
* Populating the impostor score variables for user 17 and user 18
* Completed populating user 17 under the Euclidean verifier
* Working on populating user 17 under the Manhattan verifier

14th July 2015
* Working on populating the impostor score variables for user 18 under both Euclidean and Manhattan verifiers
* Will make progress on the ScaledManhattanDistance.cs to add in the CalculateImpostorScores(double[] s001Mean, double[] stdDevUser1, double[,] s002)
and will then print out a sample - Method as been written!
* Populating the impostor score variables under the ScaledManhattanDistance verifier - in progress with user 1

AS A REMINDER - But will still be using the above format out of sanity!!

-------New changelog format-------------------
1.0      03/05/2015  PKR     Original Version
1.1      29/05/2015  PKR     Adding more users in-code and also calculating the Mean vectors under the Manhattan Distance class
1.2      09/06/2015  PKR     Adding users in-code
1.3      10/06/2015  PKR     More method calls from the ManhattanDistance.cs class file for calculation purposes
1.2      11/06/2015  PKR     Adding more users - in the repository
1.4      12/06/2015  PKR     Adding more users in-code, updating in-code documentation
1.4.1    12/06/2015  PKR     Adding the static variables for more users, will have to populate all of them soon. 
1.4.2    12/06/2015  PKR     Added users 24 through 26 in-code right now. 
1.4.3    12/06/2015  PKR     Adding users 27 through 30 in the repository, declared and initialized the 2D double arrays for users 27-30
1.4.4    13/06/2015  PKR     Now after initializing users 27-30, calculating their mean vectors and their genuine scores
1.4.5    13/06/2015  PKR     Initializing the impostor scores for users 1 through 5, and will also be adding more user data users 31 and 32
1.4.6    13/06/2015  PKR     Adding user 33 data and also now populating the impostor scores arrays. 
1.4.7    13/06/2015  PKR     Now populating the impostor arrays for users 2 through 6 - A LOT OF CODE ADDED!
1.4.8    13/06/2015  PKR     Finished up populating the impostor scores for user 2 (not with all the 100 users) but with 33 users so far. 
1.4.9    13/06/2015  PKR     Now adding more users to the solution and will be then referencing them in the code.  There is going to be a lot of code additions!
1.4.10   13/06/2015  PKR     Having more users in this solution - users 34 through 40, updating the in-code documentation
1.5      14/06/2015  PKR     Have added users 34 through 40 in-code and now dealing with the impostor scores for the same users
1.5.1    14/06/2015  PKR     Declaring more user variables: users 41 through 50, and their mean (template) vectors and the genuine score (arrays).  Raw data files to be added soon
1.5.2    14/06/2015  PKR     Declaring more user variables: users 51 through 60, and then the mean templates and genuine scores later will be declared
1.5.3    14/06/2015  PKR     Fixing Git issues, and also making sure to add more users to the repository  (solution)
1.5.4    14/06/2015  PKR     Fixed Git issues, now initializing the 2D double arrays for users 41 through 50 and added data for 54 users so far (in solution/repo)
1.5.5    15/06/2015  PKR     Git issues are fixed and right now will be adding more user data files, and also then initializing the variables (filling up the data)
1.5.6    15/06/2015  PKR     Now initialized 60 users, and will be initializing the data for the mean templates, and genuine scores for the 60 users 
1.5.7    15/06/2015  PKR     Right now, I will be initializing the genuine scores for users 41 through 60 before tackling the impostor scores
1.5.8    15/06/2015  PKR     Adding more code, and then will be adding more users.
1.5.9    16/06/2015  PKR     Right now having more impostorScore 2D double arrays initialized/populated, user 4 is completed.  User 5 is being worked on right now.
1.5.10   16/06/2015  PKR     Adding the impostor scores for user 6 and user 7
1.6      17/06/2015  PKR     Adding more raw user data: users 61 through 64 (in-code just added them), and will initialize the mean vectors (templates) and the genuine                               score matrices as well
1.6.1    18/06/2015  PKR     Having more raw user data added in the repository, and then later on in code as well, along with their mean vector and genuine scores
1.6.2    18/06/2015  PKR     Have populated the template vectors and the genuine scores for users 65 through 70
1.6.3    19/06/2015  PKR     Declaring the variables for users 71 through 74 (the raw data, template vectors, and genuine scores), and later will be populating the                                   variables, and will be populating the same variables until user 70 under the EuclideanVerifer method 
1.6.4    19/06/2015  PKR     Now finished under the EuclideanVerifier, was able to populate all of the user's template vectors, and template vectors and genuine scores                               for the all the of users under the ManhattanVerifier 
1.6.5    20/06/2015  PKR     Adding more user data, and declaring their variables (for the raw data, template vectors and genuine scores). 
1.6.6    20/06/2015  PKR     Adding more user data, from users 84 to 90 - almost all the user data has been added.
1.6.7    20/06/2015  PKR     Declaring the variables from users 76 through 90 (raw data, templates, and genuine scores). Initialization will come later on. 
1.6.8    21/06/2015  PKR     Finished with data organization of all 100 users; now be declaring the rest of the 100 users; will initialize templates and gen scores.
1.6.9    21/06/2015  PKR     Finished declaring the 100 users data in code, cleaning up in-code documentation as well 
1.6.10   21/06/2015  PKR     Right now wrote the method that will calculate the genuine scores as prescribed by the Euclidean Verifier. 
1.7      22/06/2015  PKR     Populating the mean vectors by making calls to the EuclideanVerifier class, CalculateMeanVector(s001) method and also populating the genuine                             scores by calling CalculateGenuineScores(double[,] s001, double[] s001Mean) method
1.7.1    22/06/2015  PKR     Populating additional users with their genuine scores - Users 41 through 60
1.7.2    22/06/2015  PKR     Right now populating the genuine scores for the rest of the users under the EuclideanVerifier.
1.7.3    22/06/2015  PKR     Finishing up populating the genuine scores for all 100 users.  
1.7.4    22/06/2015  PKR     Right now beginning to populate the impostor scores for various users.
1.7.5    23/06/2015  PKR     Making changes with the method signatures to be in line with the way the impostor score variables are declared. 
1.7.6    24/06/2015  PKR     Additional impostor scores are being populated and more will be declared
1.7.7    24/06/2015  PKR     Declaring additional impostor score variables, and also populating more impostor score variables
1.7.8    25/06/2015  PKR     Right now populating more impostor score variables, and will be declaring more variables.  
1.7.9    25/06/2015  PKR     Now will declare and populate the impostor scores for user 1 (all 100 or so) under the Euclidean Distance Verifier
1.7.10   25/06/2015  PKR     Right now populating the impostor scores for user 1 under the Manhattan Distance Verifier
1.8      26/06/2015  PKR     Finishing populating the impostor scores for user 3 under the Euclidean Verifier
1.8.1    26/06/2015  PKR     Going to be populating the impostor scores for user 3 under the Manhattan Verifier
1.8.2    26/06/2015  PKR     Finished populating the impostor scores for user 3 under the Manhattan Verifier
1.8.3    26/06/2015  PKR     Populated the impostor scores for user 4 under the Euclidean Verifier, the Manhattan Verifier is next. 
1.8.4    26/06/2015  PKR     Right now about to declare more impostor score variables for user 5.  
1.8.5    27/06/2015  PKR     More impostor scores for user 4 being populated under the Manhattan verifier.
1.8.6    27/06/2015  PKR     Impostor scores for user 5 being populated under the Manhattan verifier.
1.8.7    28/06/2015  PKR     More impostor scores for user 5 being declared and initialized under both Manhattan and Euclidean verifiers.
1.8.8    28/06/2015  PKR     Finished populating the impostor scores for user 5 using the Manhattan verifier, the Euclidean verifier is next.
1.8.9    29/06/2015  PKR     Finish populating impostor scres for user 5 under the Euclidean verifier. 
1.8.10   29/06/2015  PKR     Finished declaring the impostor score variables for user 6, and will be populating them under the Euclidean verifier.
1.8.11   29/06/2015  PKR     Now pausing the population of the impostor scores, and will be focusing on getting the code for the Scaled Mahattan Verifier (being written                              so that there is no "gap" per say), declaring the method in the main class (making the reference to the ScaledManhattanDistance.cs class)
1.8.12   29/06/2015  PKR     Finished populating the mean templates of the 100 subjects under the Scaled Manhattan Verifier
1.8.13   29/06/2015  PKR     Right now, I have finished the mean templates for the 100 subjects under the Scaled Manhattan Verifier
1.8.14   30/06/2015  PKR     Finishing up declaring and populating all of the impostor scores for user 7 under the Euclidean verifier first, then Manhattan verifer.
1.8.15   30/06/2015  PKR     Right now making sure all of the code is up-to-date, and method calls are going to the appropriate places, etc...
1.8.16   30/06/2015  PKR     Now declaring the variables for the impostor scores for user 8
1.8.17   30/06/2015  PKR     Finished declaring and populating the impostor scores for user 8 under both Manhattan and Euclidean verifiers
1.8.18   30/06/2015  PKR     Right now finished declaring the impostor scores for user 9, and now populating them under the Euclidean verifier.
1.8.19   01/07/2015  PKR     Continuing to populate the impostor scores for user 9 under the Euclidean verifier
1.8.20   01/07/2015  PKR     Now populating the impostor scores for user 9 under the Manhattan verifier
1.8.21   01/07/2015  PKR     Will be declaring the remaining impostor scores for user 10.  
1.8.22   01/07/2015  PKR     Right now finished populating the impostor scores for user 10 under the Manhattan verifier
1.8.23   01/07/2015  PKR     Finished up populating the impostor scores for user 10 under the Euclidean Verifer
1.8.24   02/07/2015  PKR     Declaring the impostor score variables for user 11, and beginning to declare the impostor scores for user 12
1.8.25   03/07/2015  PKR     Declaring the impostor score variables for user 13, and the standard deviation variables for all 100 users
1.8.26   03/07/2015  PKR     Populating all of the standard deviation vectors for the 100 users under the Scaled Manhattan verifier
1.8.27   05/07/2015  PKR     Finishing declaring all of the impostor scores for user 13 and will be populating them under the Manhattan and Euclidean verifiers
1.8.28   06/07/2015  PKR     Making progress on populating the impostor scores for user 13 under the Euclidean verifier
1.8.29   06/07/2015  PKR     Now, will be populating the impostor scores for user 13 under the Manhattan verifier
1.8.30   06/07/2015  PKR     Declaring the impostor score variables for user 14, and right now populating those variables.